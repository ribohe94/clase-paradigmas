#lang racket
(define seq1
  (lambda (n)
    (if (zero? n) '(0)
        (cons n (seq1 (- n 1))))))

(define seq2
  (lambda (n)
    (if (zero? n) '(0)
        (append (seq2 (- n 1)) (list n)))))

; Recurciones de cola

(define seq3
  (lambda (n)
    (seq3b n '())))

(define seq3b
  (lambda (n R)
    (if (< n 0) R
        (seq3b (- n 1) (cons n R)))))

(define seq4
  (lambda (n)
    (seq4b n 0 '())))

(define seq4b
  (lambda (n i R)
    (cond ((> i n) R)
          (else
           (seq4b n (+ i 1) (cons i R))))))

(seq1 12)
(seq2 12)
(seq3 12)
(seq4 12)